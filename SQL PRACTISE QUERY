5) Weather Observation Station 5 =>
Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, 
choose the one that comes first when ordered alphabetically.
The STATION table is described as follows:

SELECT CITY,LENGTH(CITY) FROM STATION ORDER BY LENGTH(CITY), CITY LIMIT 1;

SELECT CITY,LENGTH(CITY) FROM STATION ORDER BY LENGTH(CITY) DESC, CITY LIMIT 1;
===============================================================================================================================================================================================================
6) Weather Observation Station 6
Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:

select city from station where SUBSTRING(city,1,1) in ("a","e","i","o","u");

===============================================================================================================================================================================================================
7) Weather Observation Station 7
Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:
select distinct(city) from station where substring(city,-1,1) in ("a","e","i","o","u");
===============================================================================================================================================================================================================

8) Weather Observation Station 8
Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:

select distinct(city) from station where substring(city,-1,1) in ("a","e","i","o","u") and substring(city,1,1)
in ("a","e","i","o","u") ;

===============================================================================================================================================================================================================
9) Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:

select distinct(city) from station where substring(city,1,1) not in ("a","e","i","o","u");
===============================================================================================================================================================================================================
10) Weather Observation Station 10
Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:
select distinct(city) from station where substring(city,-1,1) not in ("a","e","i","o","u");

===============================================================================================================================================================================================================

11) Weather Observation Station 11
Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:
select distinct(city) from station where substring(city,-1,1) not in ("a","e","i","o","u") or substring(city,1,1)
not in ("a","e","i","o","u") ;
===============================================================================================================================================================================================================

12) Weather Observation Station 12

Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.

Input Format

The STATION table is described as follows:

select distinct(city) from station where substring(city,-1,1) not in ("a","e","i","o","u") and substring(city,1,1)
not in ("a","e","i","o","u") ;
===============================================================================================================================================================================================================

13) Query the Name of any student in STUDENTS who scored higher than  75 Marks. Order your output by the last three characters of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.

Input Format

The STUDENTS table is described as follows:
select name from students where marks>75 order by right(name,3) ,id asc;

===============================================================================================================================================================================================================
14) Employee Names

Write a query that prints a list of employee names (i.e.: the name attribute) from the Employee table in alphabetical order.

Input Format

The Employee table containing employee data for a company is described as follows:
select name from employee order by name;

===============================================================================================================================================================================================================
15) Employee Salaries
Write a query that prints a list of employee names (i.e.: the name attribute) for employees in Employee having a salary greater than  2000 per month who have been employees for less than  10months. 
Sort your result by ascending employee_id.

Input Format

The Employee table containing employee data for a company is described as follows:
select name from employee where salary >2000 and months<10 order by employee_id;

===============================================================================================================================================================================================================
